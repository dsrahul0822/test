CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_TRANS_STG_TO_HOP1`()
BEGIN

DECLARE SOURCE_TABLE VARCHAR(30);
DECLARE TARGET_TABLE VARCHAR(30);
DECLARE SOURCE_COUNT INT;
DECLARE TARGET_COUNT INT;
DECLARE PROCESS_NAME VARCHAR(30);
DECLARE OPEARATION_TYPE VARCHAR(100);
DECLARE LOG_DETAILS VARCHAR(100);

SELECT 'TBL_STG_EMPLOYEES' INTO SOURCE_TABLE;
SELECT 'TBL_TRANS_EMPLOYEES_HOP1' INTO TARGET_TABLE;
SET OPEARATION_TYPE = 'MODIFYING THE EXISTING COLUMNS AND VALUES FOR EMP';
SET PROCESS_NAME = 'SP_TRANS_STG_TO_HOP1';

SELECT COUNT(*) INTO SOURCE_COUNT FROM TBL_STG_EMPLOYEES;

/*In this step we are going to manipulate the data from the employees staging 
table to hop1 table*/
INSERT INTO TBL_TRANS_EMPLOYEES_HOP1
SELECT 
EMPLOYEE_ID,
FIRST_NAME,
LAST_NAME,
LOWER(CONCAT(EMAIL,'@PLANMEDIA.COM')) EMAIL,
PHONE_NUMBER,
HIRE_DATE,
JOB_ID,
SALARY,
IFNULL(COMMISSION_PCT,0) COMMISSION_PCT,
MANAGER_ID,
DEPARTMENT_ID
FROM TBL_STG_EMPLOYEES;

SELECT COUNT(*) INTO TARGET_COUNT FROM TBL_TRANS_EMPLOYEES_HOP1;


IF SOURCE_COUNT <> TARGET_COUNT THEN 
	SET LOG_DETAILS = 'THERE IS A MISMATCH, NEED TO CHECK THE FLOW';
ELSE 
	SET LOG_DETAILS = 'THERE IS NO MISMATCH, DATA LOADED SUCCESSFULLY';
END IF;



INSERT INTO HRDB_SYS_AUDIT_CONTROL
(SOURCE_NAME,
TARGET_NAME,
PROCESS_NAME,
OPERATION_TYPE,
SOURCE_COUNT,
TARGET_COUNT,
LOG_DETAILS,
OPERATED_BY,
OPERATION_DATE)
VALUES 
(SOURCE_TABLE,
TARGET_TABLE,
PROCESS_NAME,
OPEARATION_TYPE,
SOURCE_COUNT,
TARGET_COUNT,
LOG_DETAILS,
CURRENT_USER(),
CURRENT_TIMESTAMP()
);

/*Here we are going to add the changes as per the department table*/

SELECT 'TBL_STG_DEPARTMENTS' INTO SOURCE_TABLE;
SELECT 'TBL_TRANS_DEPARTMENTS_HOP1' INTO TARGET_TABLE;
SET OPEARATION_TYPE = 'MODIFYING THE EXISTING COLUMNS AND VALUES FOR DEP';
SET PROCESS_NAME = 'SP_TRANS_STG_TO_HOP1';

SELECT COUNT(*) INTO SOURCE_COUNT FROM TBL_STG_DEPARTMENTS;

INSERT INTO TBL_TRANS_DEPARTMENTS_HOP1
SELECT * FROM TBL_STG_DEPARTMENTS;

INSERT INTO TBL_TRANS_DEPARTMENTS_HOP1 VALUES (1000,'Bench',100,NULL);

UPDATE TBL_TRANS_DEPARTMENTS_HOP1
SET MANAGER_ID=100
WHERE MANAGER_ID IS NULL;

SELECT COUNT(*) INTO TARGET_COUNT FROM TBL_TRANS_DEPARTMENTS_HOP1;


IF SOURCE_COUNT+1 <> TARGET_COUNT THEN 
	SET LOG_DETAILS = 'THERE IS A MISMATCH, NEED TO CHECK THE FLOW';
ELSE 
	SET LOG_DETAILS = 'THERE IS NO MISMATCH, DATA LOADED SUCCESSFULLY';
END IF;



INSERT INTO HRDB_SYS_AUDIT_CONTROL
(SOURCE_NAME,
TARGET_NAME,
PROCESS_NAME,
OPERATION_TYPE,
SOURCE_COUNT,
TARGET_COUNT,
LOG_DETAILS,
OPERATED_BY,
OPERATION_DATE)
VALUES 
(SOURCE_TABLE,
TARGET_TABLE,
PROCESS_NAME,
OPEARATION_TYPE,
SOURCE_COUNT,
TARGET_COUNT,
LOG_DETAILS,
CURRENT_USER(),
CURRENT_TIMESTAMP()
);

/*Here we are going to add the changes as per the locations table*/
SELECT 'TBL_STG_LOCATIONS' INTO SOURCE_TABLE;
SELECT 'TBL_TRANS_LOCATIONS_HOP1' INTO TARGET_TABLE;
SET OPEARATION_TYPE = 'MODIFYING THE EXISTING COLUMNS AND VALUES FOR LOC';
SET PROCESS_NAME = 'SP_TRANS_STG_TO_HOP1';

SELECT COUNT(*) INTO SOURCE_COUNT FROM TBL_STG_LOCATIONS;


INSERT INTO TBL_TRANS_LOCATIONS_HOP1
SELECT * FROM TBL_STG_LOCATIONS;

UPDATE TBL_TRANS_LOCATIONS_HOP1
SET CITY='Rome'
WHERE CITY='Roma';

UPDATE TBL_TRANS_LOCATIONS_HOP1
SET STATE_PROVINCE='Lazio'
WHERE LOCATION_ID=1000;

UPDATE TBL_TRANS_LOCATIONS_HOP1
SET STATE_PROVINCE='Veneto'
WHERE LOCATION_ID=1100;

UPDATE TBL_TRANS_LOCATIONS_HOP1
SET STATE_PROVINCE='Hiroshima'
WHERE LOCATION_ID=1300;


UPDATE TBL_TRANS_LOCATIONS_HOP1
SET STATE_PROVINCE='Beijing'
WHERE LOCATION_ID=2000;

UPDATE TBL_TRANS_LOCATIONS_HOP1
SET CITY='Mumbai'
WHERE LOCATION_ID=2100;

UPDATE TBL_TRANS_LOCATIONS_HOP1
SET STATE_PROVINCE='Singapore'
WHERE LOCATION_ID=2300;

UPDATE TBL_TRANS_LOCATIONS_HOP1
SET STATE_PROVINCE='England'
WHERE LOCATION_ID in (2400,2500);


SELECT COUNT(*) INTO TARGET_COUNT FROM TBL_TRANS_LOCATIONS_HOP1;


IF SOURCE_COUNT <> TARGET_COUNT THEN 
	SET LOG_DETAILS = 'THERE IS A MISMATCH, NEED TO CHECK THE FLOW';
ELSE 
	SET LOG_DETAILS = 'THERE IS NO MISMATCH, DATA LOADED SUCCESSFULLY';
END IF;

INSERT INTO HRDB_SYS_AUDIT_CONTROL
(SOURCE_NAME,
TARGET_NAME,
PROCESS_NAME,
OPERATION_TYPE,
SOURCE_COUNT,
TARGET_COUNT,
LOG_DETAILS,
OPERATED_BY,
OPERATION_DATE)
VALUES 
(SOURCE_TABLE,
TARGET_TABLE,
PROCESS_NAME,
OPEARATION_TYPE,
SOURCE_COUNT,
TARGET_COUNT,
LOG_DETAILS,
CURRENT_USER(),
CURRENT_TIMESTAMP()
);


END